import { ElementRef, OnInit, EventEmitter } from '@angular/core';
export declare class CircularSliderComponent implements OnInit {
    handleContainer: ElementRef;
    grooveContainer: ElementRef;
    startingAngle: number;
    endingAngle: number;
    diameter: number;
    grooveColor: string;
    progressColor: string;
    progressWidth: number;
    grooveWidth: number;
    radius: number;
    handleWidth: number;
    bgColor: string;
    progressPadding: number;
    transparentColor: string;
    initialBtmPaddingTrnglAngleWithCenterInRad: any;
    initialBottomPaddingTriangleBottomBorderWidth: any;
    centerX: any;
    centerY: any;
    angle: number;
    leftGrooveAngle: number;
    rightGrooveAngle: number;
    leftGrooveColor: string;
    rightGrooveColor: string;
    leftProgressColor: string;
    held: boolean;
    previousAngle: number;
    progress: number;
    startingAngleValue: number;
    endingAngleValue: number;
    grooveColorValue: string;
    progressColorValue: string;
    grooveWidthValue: number;
    progressWidthValue: number;
    bgColorValue: string;
    handleWidthValue: number;
    diameterValue: number;
    total: any;
    progressValue: number;
    onProgressChanged: EventEmitter<number>;
    ngOnInit(): void;
    calculateInitialPaddingTriangleDimensions(): void;
    /**Styles */
    getGrooveContainerStyle(): {
        'width.px': number;
        'height.px': number;
        'background-color': string;
    };
    getGrooveStyle(): {
        'border-width.px': number;
        'border-color': string;
    };
    getLeftProgressStyle(): {
        'top.px': number;
        'left.px': number;
        'width.px': number;
        'height.px': number;
        'border-width.px': number;
        'border-top-left-radius.px': number;
        'border-bottom-left-radius.px': number;
        'border-color': string;
    };
    getProgressStyle(): {
        'top.px': number;
        'left.px': number;
        'width.px': number;
        'height.px': number;
        'border-width.px': number;
        'border-color': string;
    };
    getGrooveLeftStyle(): {
        'width.px': number;
        'height.px': number;
        'border-width.px': number;
        'border-color': string;
    };
    getGrooveRightStyle(): {
        'left.px': number;
        'width.px': number;
        'height.px': number;
        'border-width.px': number;
        'border-color': string;
    };
    getLeftClipStyle(): {
        'transform': string;
    };
    getRightClipStyle(): {
        'transform': string;
    };
    getHandleContainerStyle(): {
        'top.px': number;
        'left.px': number;
        'width.px': number;
        'height.px': number;
        'transform': string;
    };
    getHandleStyle(): {
        'top.px': number;
        'width.px': number;
        'height.px': number;
        'border-width.px': number;
        'border-radius.px': number;
        'border-color': string;
        'background-color': string;
    };
    getCircularHandleStyle(): {
        'width.px': number;
        'height.px': number;
        'top.px': number;
        'background-color': string;
    };
    getEdgeContainerStyle(startIngEdge: boolean): {
        'width.px': number;
        'height.px': number;
        'left.px': number;
        'top.px': number;
        'transform': string;
    };
    getLeftEdgeStyle(): {
        'width.px': number;
        'left.px': number;
        'height.px': number;
        'top.px': number;
        'background-color': string;
        'border-top-left-radius': number;
        'border-bottom-left-radius': number;
    };
    getRightEdgeStyle(): {
        'width.px': number;
        'height.px': number;
        'top.px': number;
        'background-color': string;
        'border-top-right-radius': number;
        'border-bottom-right-radius': number;
    };
    getStartProgressContainerStyle(): {
        'width.px': number;
        'height.px': number;
        'left.px': number;
        'top.px': number;
        'transform': string;
    };
    getStartProgressStyle(): {
        'width.px': number;
        'height.px': number;
        'top.px': number;
        'background-color': string;
    };
    getClipStyle(): {
        'top.px': number;
        'border-left-width.px': number;
        'border-right-width.px': number;
        'border-bottom-width': any;
        'border-bottom-color': string;
    };
    /** */
    onTouchMove(event: any): void;
    onMouseMove(event: any): void;
    onStartDrag(event: any): void;
    onStopDrag(event: any): void;
    rotateBasedOnProgress(): void;
    setProgressBasedOnAngle(): void;
    calculateAngleBasedOnPosition(clientX: any, clientY: any): any;
    rotateHandle(angle: any): void;
    recurcivelyRemoveParentXOffsets(clientX: any, parentElement: any): number;
    recurcivelyRemoveParentYOffsets(clientY: any, parentElement: any): number;
    decorateToCSSAngle(angle: any): string;
    toRadians(angleInDeg: any): number;
    fetchTrnglBtmWdthBasedonAngToCntr(angleInRad: any): string;
}
